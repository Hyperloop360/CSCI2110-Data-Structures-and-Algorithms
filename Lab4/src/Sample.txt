Generic Stack Test:
TEST 1:
Enter strings to PUS (one per line). Press Enter on an empty line to finish:
alpha
beta
gamma

Stack<String> size: 3
Stack<String> peek: gamma
Popping all String items (LIFO):
gamma beta alpha
Stack<String> empty? true

Enter Integers to PUSH (one per line). Press enter on an empty line to finish:
100
200
300
400

Stack<Integer> size: 4
Peek<Integer>: 400
Popping all Integer items (LIFO):
400 300 200 100
Stack<Integer> empty? true

TEST 2:
Enter strings to PUS (one per line). Press Enter on an empty line to finish:
what
about
this
test

Stack<String> size: 4
Stack<String> peek: test
Popping all String items (LIFO):
test this about what
Stack<String> empty? true

Enter Integers to PUSH (one per line). Press enter on an empty line to finish:
200
300
100
400

Stack<Integer> size: 4
Peek<Integer>: 400
Popping all Integer items (LIFO):
400 100 300 200
Stack<Integer> empty? true


GenericQueue Test:
TEST 1:
Enter strings to ENQUEUE (one per line). Blank line to finish:
alpha
beta
gamma

Queue<String> size: 3
Queue: alpha beta gamma
Peek<String>: alpha
Enter a String to search with positionOf:
beta
String beta found in position 1
Enter String to remove (first occurrence):
beta
Queue: alpha gamma
Dequeuing twice
alpha
gamma
Queue:
Queue<String> empty? true

Enter integers to ENQUEUE (one per line). Blank line to finish:
100
200
300
400
300

Queue<Integer> size: 5
Queue: 100 200 300 400 300
Peek<Integer>: 100
Enter an int to search with positionOf:
600
Integer 600 not found
Enter an int to remove (first occurrence):
300
Queue: 100 200 400 300
Dequeuing twice
100
200
Queue: 400 300
Queue<Integer> empty? false

TEST 2:
Enter strings to ENQUEUE (one per line). Blank line to finish:
lets
try
this
test

Queue<String> size: 4
Queue: lets try this test
Peek<String>: lets
Enter a String to search with positionOf:
this
String this found in position 2
Enter String to remove (first occurrence):
this
Queue: lets try test
Dequeuing twice
lets
try
Queue: test
Queue<String> empty? false

Enter integers to ENQUEUE (one per line). Blank line to finish:
100
200
400
500
600

Queue<Integer> size: 5
Queue: 100 200 400 500 600
Peek<Integer>: 100
Enter an int to search with positionOf:
50
Integer 50 not found
Enter an int to remove (first occurrence):
200
Queue: 100 400 500 600
Dequeuing twice
100
400
Queue: 500 600
Queue<Integer> empty? false


PrintQueueTest
TEST 1:
Print Queue Demo (type HELP for commands)
Commands:
   ADD owner jobId
   LIST
   RM jobId
   RMALL owner
   HELP
   QUIT
> LIST
Queue:
> ADD Alice 101
Added job 101 by Alice
> ADD Bob 202
Added job 202 by Bob
> LIST
Queue: Alice: 101 Bob: 202
> RM 999
Active job id does not match 999; nothing removed
> RM 101
Removed active job 101
> LIST
Queue: Bob: 202
> ADD Carol 404
Added job 404 by Carol
> LIST
Queue: Bob: 202 Carol: 404
> RMALL Bob
Removed 1 job(s) owned by Bob
> LIST
Queue: Carol: 404
> QUIT
BYE


TEST 2
Print Queue Demo (type HELP for commands)
Commands:
   ADD owner jobId
   LIST
   RM jobId
   RMALL owner
   HELP
   QUIT
> LIST
Queue:
> ADD this 33
Added job 33 by this
> ADD isabel 42
Added job 42 by isabel
> HELP
Commands:
   ADD owner jobId
   LIST
   RM jobId
   RMALL owner
   HELP
   QUIT
> RM 33
Removed active job 33
> LIST
Queue: isabel: 42
> quit
Unknown command. Type HELP for available commands.
> QUIT
BYE
